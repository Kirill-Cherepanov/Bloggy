I wrote it before starting the project. Decided to add to repo a bit later though.

Components: Navigation Bar, Footer

Overall design {
	Dark & Light themes (should probably start with dark and it'll be default)
	Color themes (need colors that will match with dark and light main colors) {
		Dark: 
		Light: 
		(Will need to try different ones and see what goes well)
	}
}

Navigation bar {
	Design: https://dribbble.com/shots/18444207-Mushroom-Social-Network-for-Gamers (this design seems good but it won't do for the website as a whole because it's based on a totally different concept)
	1. Logo
	2. Search (with different options i.e.: search bloggers/posts, by popularity/new, and others if need be) (search will lead to Posts page)
	3. Navigation: Home, Posts, About, Contacts (here I'll write that this isn't supposed to be an actual business and contacts to myself)
	4. User icon with an arrow down to the right. On click opens block with 
}

Footer (not sure if I need it at all. idk what to put there) {
	1. Navigation: Home, Posts, About us, Contacts
	2. ...
}

Homepage {
	1. A hero section {
		Design: https://dribbble.com/shots/17263029-Influencer-Website-Header (something similar)
		Header: Open yourself to the world
		Call to action: Sign up, More about us
		Subheaders {
			Tell your story
			Find your audience
			Turn your thoughts into posts
			Share your knowledge
		}
	}
	2. Our posts
	3 (unlikely). Editor's pick posts
	4. Trending posts by category and a button-link "More posts/More/Other posts/etc." leading to Posts page
	5. Most popular blogs
	* Maybe sidebar if I come up with what to put in there
}

About us:
Some text, some photos maybe, some videos maybe, some reviews maybe

Posts:
Twitter posts, Facebook posts, other popular social media posts

Other pages: Login, Registration, Post, Profile, Create Post maybe

Backend: Login system - encryption (bcrypt) and database (MongoDB), Website posts - database (MongDB), social media posts - web scraping, authorization - jwt, subscription to bloggers - need to change the db a bit (maybe sql was actually better)